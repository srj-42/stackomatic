{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["-z32P8WsVf3K"],"authorship_tag":"ABX9TyOoldXWHBQNIr2yYlSLxlS9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Part 1"],"metadata":{"id":"AlrzRHSMVQ73"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"UifDwCe0LPi9","executionInfo":{"status":"ok","timestamp":1733564648105,"user_tz":-330,"elapsed":680,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import io"]},{"cell_type":"code","source":["df = pd.read_csv('/content/sample_data/california_housing_train.csv')\n","#taking in the dataset"],"metadata":{"id":"ZuO6ypnlMrm0","executionInfo":{"status":"ok","timestamp":1733564650062,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df.head(5)\n","#displaying the initial 5 rows"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"tS2t0walN56B","executionInfo":{"status":"ok","timestamp":1733564652031,"user_tz":-330,"elapsed":506,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"5f0db593-4155-48fd-825b-c853903b750a"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","0    -114.31     34.19                15.0       5612.0          1283.0   \n","1    -114.47     34.40                19.0       7650.0          1901.0   \n","2    -114.56     33.69                17.0        720.0           174.0   \n","3    -114.57     33.64                14.0       1501.0           337.0   \n","4    -114.57     33.57                20.0       1454.0           326.0   \n","\n","   population  households  median_income  median_house_value  \n","0      1015.0       472.0         1.4936             66900.0  \n","1      1129.0       463.0         1.8200             80100.0  \n","2       333.0       117.0         1.6509             85700.0  \n","3       515.0       226.0         3.1917             73400.0  \n","4       624.0       262.0         1.9250             65500.0  "],"text/html":["\n","  <div id=\"df-7e7cd46d-1ecd-4927-b00d-023d16f68820\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-114.31</td>\n","      <td>34.19</td>\n","      <td>15.0</td>\n","      <td>5612.0</td>\n","      <td>1283.0</td>\n","      <td>1015.0</td>\n","      <td>472.0</td>\n","      <td>1.4936</td>\n","      <td>66900.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-114.47</td>\n","      <td>34.40</td>\n","      <td>19.0</td>\n","      <td>7650.0</td>\n","      <td>1901.0</td>\n","      <td>1129.0</td>\n","      <td>463.0</td>\n","      <td>1.8200</td>\n","      <td>80100.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-114.56</td>\n","      <td>33.69</td>\n","      <td>17.0</td>\n","      <td>720.0</td>\n","      <td>174.0</td>\n","      <td>333.0</td>\n","      <td>117.0</td>\n","      <td>1.6509</td>\n","      <td>85700.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-114.57</td>\n","      <td>33.64</td>\n","      <td>14.0</td>\n","      <td>1501.0</td>\n","      <td>337.0</td>\n","      <td>515.0</td>\n","      <td>226.0</td>\n","      <td>3.1917</td>\n","      <td>73400.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-114.57</td>\n","      <td>33.57</td>\n","      <td>20.0</td>\n","      <td>1454.0</td>\n","      <td>326.0</td>\n","      <td>624.0</td>\n","      <td>262.0</td>\n","      <td>1.9250</td>\n","      <td>65500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e7cd46d-1ecd-4927-b00d-023d16f68820')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e7cd46d-1ecd-4927-b00d-023d16f68820 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e7cd46d-1ecd-4927-b00d-023d16f68820');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eccbd26f-115c-4f17-a382-553a835c28d3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eccbd26f-115c-4f17-a382-553a835c28d3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eccbd26f-115c-4f17-a382-553a835c28d3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#displaying the initial 5 rows\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11216059914247682,\n        \"min\": -114.57,\n        \"max\": -114.31,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -114.47,\n          -114.57,\n          -114.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3723842101915701,\n        \"min\": 33.57,\n        \"max\": 34.4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          34.4,\n          33.57,\n          33.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_median_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5495097567963922,\n        \"min\": 14.0,\n        \"max\": 20.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          19.0,\n          20.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3063.09350167441,\n        \"min\": 720.0,\n        \"max\": 7650.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7650.0,\n          1454.0,\n          720.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 754.3743765531807,\n        \"min\": 174.0,\n        \"max\": 1901.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1901.0,\n          326.0,\n          174.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 337.36656621544466,\n        \"min\": 333.0,\n        \"max\": 1129.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1129.0,\n          624.0,\n          333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"households\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 155.11447385721294,\n        \"min\": 117.0,\n        \"max\": 472.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          463.0,\n          262.0,\n          117.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6773416737511431,\n        \"min\": 1.4936,\n        \"max\": 3.1917,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.82,\n          1.925,\n          1.6509\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_house_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8611.15555544086,\n        \"min\": 65500.0,\n        \"max\": 85700.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          80100.0,\n          65500.0,\n          85700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.tail(10)\n","#displaying the last 10 rows"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"KSZgJ3b7OAYq","executionInfo":{"status":"ok","timestamp":1733564653980,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"1a6b34ba-2854-448e-9ac2-627e36963ee4"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","16990    -124.22     41.73                28.0       3003.0           699.0   \n","16991    -124.23     41.75                11.0       3159.0           616.0   \n","16992    -124.23     40.81                52.0       1112.0           209.0   \n","16993    -124.23     40.54                52.0       2694.0           453.0   \n","16994    -124.25     40.28                32.0       1430.0           419.0   \n","16995    -124.26     40.58                52.0       2217.0           394.0   \n","16996    -124.27     40.69                36.0       2349.0           528.0   \n","16997    -124.30     41.84                17.0       2677.0           531.0   \n","16998    -124.30     41.80                19.0       2672.0           552.0   \n","16999    -124.35     40.54                52.0       1820.0           300.0   \n","\n","       population  households  median_income  median_house_value  \n","16990      1530.0       653.0         1.7038             78300.0  \n","16991      1343.0       479.0         2.4805             73200.0  \n","16992       544.0       172.0         3.3462             50800.0  \n","16993      1152.0       435.0         3.0806            106700.0  \n","16994       434.0       187.0         1.9417             76100.0  \n","16995       907.0       369.0         2.3571            111400.0  \n","16996      1194.0       465.0         2.5179             79000.0  \n","16997      1244.0       456.0         3.0313            103600.0  \n","16998      1298.0       478.0         1.9797             85800.0  \n","16999       806.0       270.0         3.0147             94600.0  "],"text/html":["\n","  <div id=\"df-4906cd60-4a07-4eb3-a687-80331335727a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16990</th>\n","      <td>-124.22</td>\n","      <td>41.73</td>\n","      <td>28.0</td>\n","      <td>3003.0</td>\n","      <td>699.0</td>\n","      <td>1530.0</td>\n","      <td>653.0</td>\n","      <td>1.7038</td>\n","      <td>78300.0</td>\n","    </tr>\n","    <tr>\n","      <th>16991</th>\n","      <td>-124.23</td>\n","      <td>41.75</td>\n","      <td>11.0</td>\n","      <td>3159.0</td>\n","      <td>616.0</td>\n","      <td>1343.0</td>\n","      <td>479.0</td>\n","      <td>2.4805</td>\n","      <td>73200.0</td>\n","    </tr>\n","    <tr>\n","      <th>16992</th>\n","      <td>-124.23</td>\n","      <td>40.81</td>\n","      <td>52.0</td>\n","      <td>1112.0</td>\n","      <td>209.0</td>\n","      <td>544.0</td>\n","      <td>172.0</td>\n","      <td>3.3462</td>\n","      <td>50800.0</td>\n","    </tr>\n","    <tr>\n","      <th>16993</th>\n","      <td>-124.23</td>\n","      <td>40.54</td>\n","      <td>52.0</td>\n","      <td>2694.0</td>\n","      <td>453.0</td>\n","      <td>1152.0</td>\n","      <td>435.0</td>\n","      <td>3.0806</td>\n","      <td>106700.0</td>\n","    </tr>\n","    <tr>\n","      <th>16994</th>\n","      <td>-124.25</td>\n","      <td>40.28</td>\n","      <td>32.0</td>\n","      <td>1430.0</td>\n","      <td>419.0</td>\n","      <td>434.0</td>\n","      <td>187.0</td>\n","      <td>1.9417</td>\n","      <td>76100.0</td>\n","    </tr>\n","    <tr>\n","      <th>16995</th>\n","      <td>-124.26</td>\n","      <td>40.58</td>\n","      <td>52.0</td>\n","      <td>2217.0</td>\n","      <td>394.0</td>\n","      <td>907.0</td>\n","      <td>369.0</td>\n","      <td>2.3571</td>\n","      <td>111400.0</td>\n","    </tr>\n","    <tr>\n","      <th>16996</th>\n","      <td>-124.27</td>\n","      <td>40.69</td>\n","      <td>36.0</td>\n","      <td>2349.0</td>\n","      <td>528.0</td>\n","      <td>1194.0</td>\n","      <td>465.0</td>\n","      <td>2.5179</td>\n","      <td>79000.0</td>\n","    </tr>\n","    <tr>\n","      <th>16997</th>\n","      <td>-124.30</td>\n","      <td>41.84</td>\n","      <td>17.0</td>\n","      <td>2677.0</td>\n","      <td>531.0</td>\n","      <td>1244.0</td>\n","      <td>456.0</td>\n","      <td>3.0313</td>\n","      <td>103600.0</td>\n","    </tr>\n","    <tr>\n","      <th>16998</th>\n","      <td>-124.30</td>\n","      <td>41.80</td>\n","      <td>19.0</td>\n","      <td>2672.0</td>\n","      <td>552.0</td>\n","      <td>1298.0</td>\n","      <td>478.0</td>\n","      <td>1.9797</td>\n","      <td>85800.0</td>\n","    </tr>\n","    <tr>\n","      <th>16999</th>\n","      <td>-124.35</td>\n","      <td>40.54</td>\n","      <td>52.0</td>\n","      <td>1820.0</td>\n","      <td>300.0</td>\n","      <td>806.0</td>\n","      <td>270.0</td>\n","      <td>3.0147</td>\n","      <td>94600.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4906cd60-4a07-4eb3-a687-80331335727a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4906cd60-4a07-4eb3-a687-80331335727a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4906cd60-4a07-4eb3-a687-80331335727a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5a118fff-9a53-4d1d-a21a-002ac8ec324b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a118fff-9a53-4d1d-a21a-002ac8ec324b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5a118fff-9a53-4d1d-a21a-002ac8ec324b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#displaying the last 10 rows\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04168666186896637,\n        \"min\": -124.35,\n        \"max\": -124.22,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -124.22,\n          -124.23,\n          -124.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6376902766146656,\n        \"min\": 40.28,\n        \"max\": 41.84,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          41.84,\n          41.75,\n          40.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_median_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.230629480501776,\n        \"min\": 11.0,\n        \"max\": 52.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          28.0,\n          11.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 672.8054118556287,\n        \"min\": 1112.0,\n        \"max\": 3159.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2672.0,\n          3159.0,\n          2217.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 146.53513041057573,\n        \"min\": 209.0,\n        \"max\": 699.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          552.0,\n          616.0,\n          394.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 359.28564927892376,\n        \"min\": 434.0,\n        \"max\": 1530.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1298.0,\n          1343.0,\n          907.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"households\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 149.0728382741508,\n        \"min\": 172.0,\n        \"max\": 653.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          478.0,\n          479.0,\n          369.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5594885407425447,\n        \"min\": 1.7038,\n        \"max\": 3.3462,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.9797,\n          2.4805,\n          2.3571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_house_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18458.858156571994,\n        \"min\": 50800.0,\n        \"max\": 111400.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          85800.0,\n          73200.0,\n          111400.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.max()\n","#finding the maximum of each column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"WfoKP6bGPfJd","executionInfo":{"status":"ok","timestamp":1733564657563,"user_tz":-330,"elapsed":495,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"ee85909b-b4ad-4abf-c02c-aef66ef7edf1"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude               -114.3100\n","latitude                  41.9500\n","housing_median_age        52.0000\n","total_rooms            37937.0000\n","total_bedrooms          6445.0000\n","population             35682.0000\n","households              6082.0000\n","median_income             15.0001\n","median_house_value    500001.0000\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>longitude</th>\n","      <td>-114.3100</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>41.9500</td>\n","    </tr>\n","    <tr>\n","      <th>housing_median_age</th>\n","      <td>52.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_rooms</th>\n","      <td>37937.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_bedrooms</th>\n","      <td>6445.0000</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>35682.0000</td>\n","    </tr>\n","    <tr>\n","      <th>households</th>\n","      <td>6082.0000</td>\n","    </tr>\n","    <tr>\n","      <th>median_income</th>\n","      <td>15.0001</td>\n","    </tr>\n","    <tr>\n","      <th>median_house_value</th>\n","      <td>500001.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"jQtRh0_Xio_4","executionInfo":{"status":"ok","timestamp":1733564659712,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"d8d44253-6bab-4892-a6f0-cffb98a49c76"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude              -124.3500\n","latitude                 32.5400\n","housing_median_age        1.0000\n","total_rooms               2.0000\n","total_bedrooms            1.0000\n","population                3.0000\n","households                1.0000\n","median_income             0.4999\n","median_house_value    14999.0000\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>longitude</th>\n","      <td>-124.3500</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>32.5400</td>\n","    </tr>\n","    <tr>\n","      <th>housing_median_age</th>\n","      <td>1.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_rooms</th>\n","      <td>2.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_bedrooms</th>\n","      <td>1.0000</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>3.0000</td>\n","    </tr>\n","    <tr>\n","      <th>households</th>\n","      <td>1.0000</td>\n","    </tr>\n","    <tr>\n","      <th>median_income</th>\n","      <td>0.4999</td>\n","    </tr>\n","    <tr>\n","      <th>median_house_value</th>\n","      <td>14999.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.mean()\n","#finding the mean of each column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"D7H3SEa9ipLi","executionInfo":{"status":"ok","timestamp":1733564662272,"user_tz":-330,"elapsed":535,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"a6db22ba-0404-444e-a8fd-8b64139699e9"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude               -119.562108\n","latitude                  35.625225\n","housing_median_age        28.589353\n","total_rooms             2643.664412\n","total_bedrooms           539.410824\n","population              1429.573941\n","households               501.221941\n","median_income              3.883578\n","median_house_value    207300.912353\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>longitude</th>\n","      <td>-119.562108</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>35.625225</td>\n","    </tr>\n","    <tr>\n","      <th>housing_median_age</th>\n","      <td>28.589353</td>\n","    </tr>\n","    <tr>\n","      <th>total_rooms</th>\n","      <td>2643.664412</td>\n","    </tr>\n","    <tr>\n","      <th>total_bedrooms</th>\n","      <td>539.410824</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>1429.573941</td>\n","    </tr>\n","    <tr>\n","      <th>households</th>\n","      <td>501.221941</td>\n","    </tr>\n","    <tr>\n","      <th>median_income</th>\n","      <td>3.883578</td>\n","    </tr>\n","    <tr>\n","      <th>median_house_value</th>\n","      <td>207300.912353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.median()\n","#finding the median of each column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"x6VkTkmWipV9","executionInfo":{"status":"ok","timestamp":1733564663984,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"099afb58-c85c-4c4a-aa24-f39298842d7c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude               -118.4900\n","latitude                  34.2500\n","housing_median_age        29.0000\n","total_rooms             2127.0000\n","total_bedrooms           434.0000\n","population              1167.0000\n","households               409.0000\n","median_income              3.5446\n","median_house_value    180400.0000\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>longitude</th>\n","      <td>-118.4900</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>34.2500</td>\n","    </tr>\n","    <tr>\n","      <th>housing_median_age</th>\n","      <td>29.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_rooms</th>\n","      <td>2127.0000</td>\n","    </tr>\n","    <tr>\n","      <th>total_bedrooms</th>\n","      <td>434.0000</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>1167.0000</td>\n","    </tr>\n","    <tr>\n","      <th>households</th>\n","      <td>409.0000</td>\n","    </tr>\n","    <tr>\n","      <th>median_income</th>\n","      <td>3.5446</td>\n","    </tr>\n","    <tr>\n","      <th>median_house_value</th>\n","      <td>180400.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.std()\n","#finding the standard deviation of each column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"cHOZrLN4ipeV","executionInfo":{"status":"ok","timestamp":1733564667279,"user_tz":-330,"elapsed":404,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"5125f39c-f18a-4374-8fa4-f69633e03080"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude                  2.005166\n","latitude                   2.137340\n","housing_median_age        12.586937\n","total_rooms             2179.947071\n","total_bedrooms           421.499452\n","population              1147.852959\n","households               384.520841\n","median_income              1.908157\n","median_house_value    115983.764387\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>longitude</th>\n","      <td>2.005166</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>2.137340</td>\n","    </tr>\n","    <tr>\n","      <th>housing_median_age</th>\n","      <td>12.586937</td>\n","    </tr>\n","    <tr>\n","      <th>total_rooms</th>\n","      <td>2179.947071</td>\n","    </tr>\n","    <tr>\n","      <th>total_bedrooms</th>\n","      <td>421.499452</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>1147.852959</td>\n","    </tr>\n","    <tr>\n","      <th>households</th>\n","      <td>384.520841</td>\n","    </tr>\n","    <tr>\n","      <th>median_income</th>\n","      <td>1.908157</td>\n","    </tr>\n","    <tr>\n","      <th>median_house_value</th>\n","      <td>115983.764387</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["unique_val = df['total_bedrooms'].unique()\n","print(f\"{unique_val}\")\n","\n","print(df['total_bedrooms'].nunique())\n","#finding the unique values in the column 'total_bedroooms'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x9YFGUvSipm3","executionInfo":{"status":"ok","timestamp":1733564669745,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"45c79462-fe1f-42bc-fd00-e6de13080435"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[1283. 1901.  174. ... 1637. 1308.  936.]\n","1848\n"]}]},{"cell_type":"code","source":["df['total_bedrooms_per_total_rooms']=df['total_bedrooms']/df['total_rooms']\n","print(df)\n","#creating a new column 'total_bedrooms_per_total_rooms' to df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w2a20ekHUmgN","executionInfo":{"status":"ok","timestamp":1733564672639,"user_tz":-330,"elapsed":420,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"a2cb8c90-8543-4300-eeac-c4eff43b2d77"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["       longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","0        -114.31     34.19                15.0       5612.0          1283.0   \n","1        -114.47     34.40                19.0       7650.0          1901.0   \n","2        -114.56     33.69                17.0        720.0           174.0   \n","3        -114.57     33.64                14.0       1501.0           337.0   \n","4        -114.57     33.57                20.0       1454.0           326.0   \n","...          ...       ...                 ...          ...             ...   \n","16995    -124.26     40.58                52.0       2217.0           394.0   \n","16996    -124.27     40.69                36.0       2349.0           528.0   \n","16997    -124.30     41.84                17.0       2677.0           531.0   \n","16998    -124.30     41.80                19.0       2672.0           552.0   \n","16999    -124.35     40.54                52.0       1820.0           300.0   \n","\n","       population  households  median_income  median_house_value  \\\n","0          1015.0       472.0         1.4936             66900.0   \n","1          1129.0       463.0         1.8200             80100.0   \n","2           333.0       117.0         1.6509             85700.0   \n","3           515.0       226.0         3.1917             73400.0   \n","4           624.0       262.0         1.9250             65500.0   \n","...           ...         ...            ...                 ...   \n","16995       907.0       369.0         2.3571            111400.0   \n","16996      1194.0       465.0         2.5179             79000.0   \n","16997      1244.0       456.0         3.0313            103600.0   \n","16998      1298.0       478.0         1.9797             85800.0   \n","16999       806.0       270.0         3.0147             94600.0   \n","\n","       total_bedrooms_per_total_rooms  \n","0                            0.228617  \n","1                            0.248497  \n","2                            0.241667  \n","3                            0.224517  \n","4                            0.224209  \n","...                               ...  \n","16995                        0.177718  \n","16996                        0.224777  \n","16997                        0.198356  \n","16998                        0.206587  \n","16999                        0.164835  \n","\n","[17000 rows x 10 columns]\n"]}]},{"cell_type":"code","source":["df['total_bedrooms_per_total_rooms'].mean()\n","#finding the mean of the new column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xhowCc0dUoXf","executionInfo":{"status":"ok","timestamp":1733564675792,"user_tz":-330,"elapsed":517,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"e6f82aa8-8f09-4d62-be96-c15fab5a2fa2"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.21275998821034803"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df['total_bedrooms_per_total_rooms'].std()\n","#finding the standard deviation of the new column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_vpEeBglUoeZ","executionInfo":{"status":"ok","timestamp":1733564677629,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"99b16ad7-d577-48c4-9a0d-3b150f9b086d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.057823008903161756"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df[df['median_income']>5]\n","#filtering to get the rows for which median_income is greater than 5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"71JJ0Jq7Uvjy","executionInfo":{"status":"ok","timestamp":1733564679479,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"cda3ae57-c201-4adb-cffd-18dba97c8b09"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","32       -115.39     32.76                16.0       1136.0           196.0   \n","69       -115.55     32.98                33.0       2266.0           365.0   \n","92       -115.57     32.78                20.0       1534.0           235.0   \n","98       -115.58     32.78                 5.0       2494.0           414.0   \n","100      -115.59     32.79                 8.0       2183.0           307.0   \n","...          ...       ...                 ...          ...             ...   \n","16737    -122.89     38.38                16.0       2017.0           369.0   \n","16762    -122.94     38.57                33.0       1530.0           266.0   \n","16776    -123.00     38.33                 8.0       3223.0           637.0   \n","16802    -123.17     39.18                14.0       2240.0           327.0   \n","16899    -124.05     40.94                14.0       1452.0           217.0   \n","\n","       population  households  median_income  median_house_value  \\\n","32          481.0       185.0         6.2558            146300.0   \n","69          952.0       360.0         5.4349            143000.0   \n","92          871.0       222.0         6.2715             97200.0   \n","98         1416.0       421.0         5.7843            110100.0   \n","100        1000.0       287.0         6.3814            159900.0   \n","...           ...         ...            ...                 ...   \n","16737       931.0       336.0         5.7664            267500.0   \n","16762       728.0       250.0         5.1005            266700.0   \n","16776       851.0       418.0         5.6445            364800.0   \n","16802      1030.0       308.0         5.9585            214900.0   \n","16899       516.0       181.0         5.0329            165600.0   \n","\n","       total_bedrooms_per_total_rooms  \n","32                           0.172535  \n","69                           0.161077  \n","92                           0.153194  \n","98                           0.165998  \n","100                          0.140632  \n","...                               ...  \n","16737                        0.182945  \n","16762                        0.173856  \n","16776                        0.197642  \n","16802                        0.145982  \n","16899                        0.149449  \n","\n","[3752 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-f9893d60-a132-4ab1-a54d-dd48caac6db1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","      <th>total_bedrooms_per_total_rooms</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>-115.39</td>\n","      <td>32.76</td>\n","      <td>16.0</td>\n","      <td>1136.0</td>\n","      <td>196.0</td>\n","      <td>481.0</td>\n","      <td>185.0</td>\n","      <td>6.2558</td>\n","      <td>146300.0</td>\n","      <td>0.172535</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>-115.55</td>\n","      <td>32.98</td>\n","      <td>33.0</td>\n","      <td>2266.0</td>\n","      <td>365.0</td>\n","      <td>952.0</td>\n","      <td>360.0</td>\n","      <td>5.4349</td>\n","      <td>143000.0</td>\n","      <td>0.161077</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>-115.57</td>\n","      <td>32.78</td>\n","      <td>20.0</td>\n","      <td>1534.0</td>\n","      <td>235.0</td>\n","      <td>871.0</td>\n","      <td>222.0</td>\n","      <td>6.2715</td>\n","      <td>97200.0</td>\n","      <td>0.153194</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>-115.58</td>\n","      <td>32.78</td>\n","      <td>5.0</td>\n","      <td>2494.0</td>\n","      <td>414.0</td>\n","      <td>1416.0</td>\n","      <td>421.0</td>\n","      <td>5.7843</td>\n","      <td>110100.0</td>\n","      <td>0.165998</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>-115.59</td>\n","      <td>32.79</td>\n","      <td>8.0</td>\n","      <td>2183.0</td>\n","      <td>307.0</td>\n","      <td>1000.0</td>\n","      <td>287.0</td>\n","      <td>6.3814</td>\n","      <td>159900.0</td>\n","      <td>0.140632</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>16737</th>\n","      <td>-122.89</td>\n","      <td>38.38</td>\n","      <td>16.0</td>\n","      <td>2017.0</td>\n","      <td>369.0</td>\n","      <td>931.0</td>\n","      <td>336.0</td>\n","      <td>5.7664</td>\n","      <td>267500.0</td>\n","      <td>0.182945</td>\n","    </tr>\n","    <tr>\n","      <th>16762</th>\n","      <td>-122.94</td>\n","      <td>38.57</td>\n","      <td>33.0</td>\n","      <td>1530.0</td>\n","      <td>266.0</td>\n","      <td>728.0</td>\n","      <td>250.0</td>\n","      <td>5.1005</td>\n","      <td>266700.0</td>\n","      <td>0.173856</td>\n","    </tr>\n","    <tr>\n","      <th>16776</th>\n","      <td>-123.00</td>\n","      <td>38.33</td>\n","      <td>8.0</td>\n","      <td>3223.0</td>\n","      <td>637.0</td>\n","      <td>851.0</td>\n","      <td>418.0</td>\n","      <td>5.6445</td>\n","      <td>364800.0</td>\n","      <td>0.197642</td>\n","    </tr>\n","    <tr>\n","      <th>16802</th>\n","      <td>-123.17</td>\n","      <td>39.18</td>\n","      <td>14.0</td>\n","      <td>2240.0</td>\n","      <td>327.0</td>\n","      <td>1030.0</td>\n","      <td>308.0</td>\n","      <td>5.9585</td>\n","      <td>214900.0</td>\n","      <td>0.145982</td>\n","    </tr>\n","    <tr>\n","      <th>16899</th>\n","      <td>-124.05</td>\n","      <td>40.94</td>\n","      <td>14.0</td>\n","      <td>1452.0</td>\n","      <td>217.0</td>\n","      <td>516.0</td>\n","      <td>181.0</td>\n","      <td>5.0329</td>\n","      <td>165600.0</td>\n","      <td>0.149449</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3752 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9893d60-a132-4ab1-a54d-dd48caac6db1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9893d60-a132-4ab1-a54d-dd48caac6db1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9893d60-a132-4ab1-a54d-dd48caac6db1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1ed8090-ed20-4541-816c-f2176ce4ac3e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1ed8090-ed20-4541-816c-f2176ce4ac3e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1ed8090-ed20-4541-816c-f2176ce4ac3e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#filtering to get the rows for which median_income is greater than 5\",\n  \"rows\": 3752,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.997415857034267,\n        \"min\": -124.05,\n        \"max\": -115.39,\n        \"num_unique_values\": 486,\n        \"samples\": [\n          -122.15,\n          -119.67,\n          -122.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9242495141799911,\n        \"min\": 32.57,\n        \"max\": 40.94,\n        \"num_unique_values\": 436,\n        \"samples\": [\n          38.38,\n          34.15,\n          38.04\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_median_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.758864137572042,\n        \"min\": 1.0,\n        \"max\": 52.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          22.0,\n          36.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2855.5162863491546,\n        \"min\": 8.0,\n        \"max\": 37937.0,\n        \"num_unique_values\": 2715,\n        \"samples\": [\n          4458.0,\n          2143.0,\n          1984.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 455.7793511380292,\n        \"min\": 1.0,\n        \"max\": 5471.0,\n        \"num_unique_values\": 1155,\n        \"samples\": [\n          16.0,\n          337.0,\n          667.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1280.0783753904354,\n        \"min\": 11.0,\n        \"max\": 16122.0,\n        \"num_unique_values\": 2007,\n        \"samples\": [\n          3861.0,\n          2129.0,\n          1655.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"households\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 422.5397443163703,\n        \"min\": 1.0,\n        \"max\": 5189.0,\n        \"num_unique_values\": 1110,\n        \"samples\": [\n          1718.0,\n          324.0,\n          154.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8182194579285542,\n        \"min\": 5.0012,\n        \"max\": 15.0001,\n        \"num_unique_values\": 3446,\n        \"samples\": [\n          7.5426,\n          7.2708,\n          5.9254\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_house_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111283.81260751747,\n        \"min\": 47500.0,\n        \"max\": 500001.0,\n        \"num_unique_values\": 1980,\n        \"samples\": [\n          196300.0,\n          222800.0,\n          358800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms_per_total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.026483443357616782,\n        \"min\": 0.1,\n        \"max\": 0.4590909090909091,\n        \"num_unique_values\": 3686,\n        \"samples\": [\n          0.14596387762624402,\n          0.18972332015810275,\n          0.13966666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df[(df['total_rooms']>10000) & (df['median_house_value']<150000)]\n","#filtering to get the rows for which total_rooms is greater than 10000 and median_house_value lesser than 150000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"eIC2ZFwHU8TV","executionInfo":{"status":"ok","timestamp":1733564682648,"user_tz":-330,"elapsed":514,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"3cd00422-3fda-470a-ee88-fd380cd61755"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","133      -116.06     34.15                15.0      10377.0          2331.0   \n","191      -116.36     33.88                11.0      12557.0          3098.0   \n","198      -116.38     33.73                10.0      11836.0          2405.0   \n","201      -116.39     33.82                15.0      11115.0          2257.0   \n","229      -116.47     33.81                 7.0      10105.0          2481.0   \n","...          ...       ...                 ...          ...             ...   \n","12654    -121.75     38.67                 9.0      12139.0          2640.0   \n","12772    -121.79     36.64                11.0      32627.0          6445.0   \n","13388    -121.94     38.27                35.0      10869.0          2226.0   \n","13707    -122.00     38.25                 7.0      11768.0          1893.0   \n","15436    -122.31     40.55                11.0      13714.0          2302.0   \n","\n","       population  households  median_income  median_house_value  \\\n","133        4507.0      1807.0         2.2466             66800.0   \n","191        2453.0      1232.0         1.7844             78500.0   \n","198        3811.0      1570.0         4.0079            134500.0   \n","201        4122.0      1653.0         2.7219             74400.0   \n","229        6274.0      2095.0         2.4497             90900.0   \n","...           ...         ...            ...                 ...   \n","12654      6837.0      2358.0         3.1250            132500.0   \n","12772     28566.0      6082.0         2.3087            118800.0   \n","13388      9879.0      2152.0         2.5681             81300.0   \n","13707      6657.0      1874.0         4.9222            142900.0   \n","15436      6511.0      2267.0         3.5522            100100.0   \n","\n","       total_bedrooms_per_total_rooms  \n","133                          0.224631  \n","191                          0.246715  \n","198                          0.203194  \n","201                          0.203059  \n","229                          0.245522  \n","...                               ...  \n","12654                        0.217481  \n","12772                        0.197536  \n","13388                        0.204803  \n","13707                        0.160860  \n","15436                        0.167858  \n","\n","[67 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-89172acc-57cc-4ca9-894c-e7f53e9ecec2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","      <th>total_bedrooms_per_total_rooms</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>133</th>\n","      <td>-116.06</td>\n","      <td>34.15</td>\n","      <td>15.0</td>\n","      <td>10377.0</td>\n","      <td>2331.0</td>\n","      <td>4507.0</td>\n","      <td>1807.0</td>\n","      <td>2.2466</td>\n","      <td>66800.0</td>\n","      <td>0.224631</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>-116.36</td>\n","      <td>33.88</td>\n","      <td>11.0</td>\n","      <td>12557.0</td>\n","      <td>3098.0</td>\n","      <td>2453.0</td>\n","      <td>1232.0</td>\n","      <td>1.7844</td>\n","      <td>78500.0</td>\n","      <td>0.246715</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-116.38</td>\n","      <td>33.73</td>\n","      <td>10.0</td>\n","      <td>11836.0</td>\n","      <td>2405.0</td>\n","      <td>3811.0</td>\n","      <td>1570.0</td>\n","      <td>4.0079</td>\n","      <td>134500.0</td>\n","      <td>0.203194</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>-116.39</td>\n","      <td>33.82</td>\n","      <td>15.0</td>\n","      <td>11115.0</td>\n","      <td>2257.0</td>\n","      <td>4122.0</td>\n","      <td>1653.0</td>\n","      <td>2.7219</td>\n","      <td>74400.0</td>\n","      <td>0.203059</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>-116.47</td>\n","      <td>33.81</td>\n","      <td>7.0</td>\n","      <td>10105.0</td>\n","      <td>2481.0</td>\n","      <td>6274.0</td>\n","      <td>2095.0</td>\n","      <td>2.4497</td>\n","      <td>90900.0</td>\n","      <td>0.245522</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12654</th>\n","      <td>-121.75</td>\n","      <td>38.67</td>\n","      <td>9.0</td>\n","      <td>12139.0</td>\n","      <td>2640.0</td>\n","      <td>6837.0</td>\n","      <td>2358.0</td>\n","      <td>3.1250</td>\n","      <td>132500.0</td>\n","      <td>0.217481</td>\n","    </tr>\n","    <tr>\n","      <th>12772</th>\n","      <td>-121.79</td>\n","      <td>36.64</td>\n","      <td>11.0</td>\n","      <td>32627.0</td>\n","      <td>6445.0</td>\n","      <td>28566.0</td>\n","      <td>6082.0</td>\n","      <td>2.3087</td>\n","      <td>118800.0</td>\n","      <td>0.197536</td>\n","    </tr>\n","    <tr>\n","      <th>13388</th>\n","      <td>-121.94</td>\n","      <td>38.27</td>\n","      <td>35.0</td>\n","      <td>10869.0</td>\n","      <td>2226.0</td>\n","      <td>9879.0</td>\n","      <td>2152.0</td>\n","      <td>2.5681</td>\n","      <td>81300.0</td>\n","      <td>0.204803</td>\n","    </tr>\n","    <tr>\n","      <th>13707</th>\n","      <td>-122.00</td>\n","      <td>38.25</td>\n","      <td>7.0</td>\n","      <td>11768.0</td>\n","      <td>1893.0</td>\n","      <td>6657.0</td>\n","      <td>1874.0</td>\n","      <td>4.9222</td>\n","      <td>142900.0</td>\n","      <td>0.160860</td>\n","    </tr>\n","    <tr>\n","      <th>15436</th>\n","      <td>-122.31</td>\n","      <td>40.55</td>\n","      <td>11.0</td>\n","      <td>13714.0</td>\n","      <td>2302.0</td>\n","      <td>6511.0</td>\n","      <td>2267.0</td>\n","      <td>3.5522</td>\n","      <td>100100.0</td>\n","      <td>0.167858</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>67 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89172acc-57cc-4ca9-894c-e7f53e9ecec2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89172acc-57cc-4ca9-894c-e7f53e9ecec2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89172acc-57cc-4ca9-894c-e7f53e9ecec2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2f0351ff-afea-4408-bebc-08a8677b1336\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f0351ff-afea-4408-bebc-08a8677b1336')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2f0351ff-afea-4408-bebc-08a8677b1336 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#filtering to get the rows for which total_rooms is greater than 10000 and median_house_value lesser than 150000\",\n  \"rows\": 67,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.988738432219411,\n        \"min\": -122.31,\n        \"max\": -116.06,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          -118.15,\n          -116.52,\n          -119.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.16567128442117,\n        \"min\": 32.79,\n        \"max\": 40.55,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          34.15,\n          33.85,\n          35.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_median_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.449189080884123,\n        \"min\": 3.0,\n        \"max\": 35.0,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          15.0,\n          29.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4161.273109724144,\n        \"min\": 10035.0,\n        \"max\": 32627.0,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          23386.0,\n          13195.0,\n          10105.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 874.4069174355602,\n        \"min\": 1545.0,\n        \"max\": 6445.0,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          3392.0,\n          2640.0,\n          2331.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4934.5826797641475,\n        \"min\": 701.0,\n        \"max\": 35682.0,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          10493.0,\n          6763.0,\n          6274.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"households\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 908.3620240366146,\n        \"min\": 254.0,\n        \"max\": 6082.0,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          3671.0,\n          2437.0,\n          2095.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8903295255144096,\n        \"min\": 1.7579,\n        \"max\": 5.0012,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          4.0211,\n          3.5851,\n          2.4497\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_house_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24143.58497847502,\n        \"min\": 28300.0,\n        \"max\": 149900.0,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          145900.0,\n          129700.0,\n          66800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms_per_total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.030413401069687866,\n        \"min\": 0.15300059417706477,\n        \"max\": 0.29380817482800486,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          0.17835457111092107,\n          0.20431981811292155,\n          0.245522018802573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df.to_csv('new.csv')\n","#saving the new df to a new file named 'new.csv"],"metadata":{"id":"An0lQbv4Z8vr","executionInfo":{"status":"ok","timestamp":1733564685405,"user_tz":-330,"elapsed":599,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}}},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":["#Part 2"],"metadata":{"id":"7wO8TeabVcez"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"dIUpeifUrgZb","executionInfo":{"status":"ok","timestamp":1733564692229,"user_tz":-330,"elapsed":501,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["a=np.arange(1, 21)\n","print(a)\n","#creating an array of integers from 1 to 20"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z8HVo615qvBk","executionInfo":{"status":"ok","timestamp":1733564693693,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"f9bcc006-bff4-4d44-fabc-f2e38fd44a80"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20]\n"]}]},{"cell_type":"code","source":["a[1:20:2]\n","#splicing to get the even elements"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1xXWTX3zrlaN","executionInfo":{"status":"ok","timestamp":1733564696317,"user_tz":-330,"elapsed":504,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"ce51acb5-a815-4c9b-d400-77021a6ea80d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["b=np.random.randint(10,100,size=(5,4))\n","print(b)\n","#creating a 2D array of 5x4 dimensions with random integers between 10 and 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xtEAJO5qtGZx","executionInfo":{"status":"ok","timestamp":1733564697700,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"42e55200-8a78-4c8c-f7fc-684bf9dfee19"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[[36 10 43 95]\n"," [62 19 18 38]\n"," [68 89 42 23]\n"," [28 54 27 51]\n"," [70 56 73 89]]\n"]}]},{"cell_type":"code","source":["b[0:3, 0:2]\n","# gettting a 3x2 subarray of the 2D array b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeih1zwOuhs7","executionInfo":{"status":"ok","timestamp":1733564699633,"user_tz":-330,"elapsed":488,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"f5b275e3-16e1-4855-db2b-670e39891efe"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[36, 10],\n","       [62, 19],\n","       [68, 89]])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["a.reshape(4, 5)\n","#reshaping a to a 4x5 2D array"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4dMnyYOny0H8","executionInfo":{"status":"ok","timestamp":1733564701550,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"bb9e7902-8b70-4854-98a6-8b7ef20373d0"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2,  3,  4,  5],\n","       [ 6,  7,  8,  9, 10],\n","       [11, 12, 13, 14, 15],\n","       [16, 17, 18, 19, 20]])"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["a.flatten()\n","print(a)\n","#flattening a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TvTiYCKizIHC","executionInfo":{"status":"ok","timestamp":1733564704647,"user_tz":-330,"elapsed":518,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"72f733db-e7ef-4e74-878b-480ca402fa4a"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20]\n"]}]},{"cell_type":"code","source":["c=np.random.randint(10,100,size=(4, 7))\n","print(b)\n","print(c)\n","np.matmul(b, c)\n","#matrix multiplication"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iA6HIOCP-P9B","executionInfo":{"status":"ok","timestamp":1733564706075,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"81349534-b598-4821-8818-8712e3957fbf"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["[[36 10 43 95]\n"," [62 19 18 38]\n"," [68 89 42 23]\n"," [28 54 27 51]\n"," [70 56 73 89]]\n","[[63 93 74 57 43 33 13]\n"," [40 79 68 93 96 56 37]\n"," [64 59 90 44 72 77 38]\n"," [79 38 16 80 80 55 49]]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[12925, 10285,  8734, 12474, 13204, 10284,  7127],\n","       [ 8820,  9773,  8108,  9133,  8826,  6586,  4055],\n","       [12349, 16707, 15232, 15841, 16332, 11727,  6900],\n","       [ 9681, 10401,  8990, 11886, 12412,  8832,  5887],\n","       [18353, 18623, 16982, 19530, 20762, 15962, 10117]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["d=np.random.randint(0, 100, size=50)\n","#creating an array of length 50 with random integers between 0 and 100"],"metadata":{"id":"rszVaZtCAbC0","executionInfo":{"status":"ok","timestamp":1733564709020,"user_tz":-330,"elapsed":583,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["d[d>50]\n","#filtering to get the elements greater than 50 using boolean indexing"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iz2J7CLnDPaT","executionInfo":{"status":"ok","timestamp":1733564711742,"user_tz":-330,"elapsed":432,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"c41beeaf-a8cb-4998-eb9d-a3d69a1aca61"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([65, 79, 56, 52, 64, 64, 91, 86, 57, 66, 65, 71, 90, 61, 59, 57, 82,\n","       72, 58, 91, 59, 82, 54, 57])"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["indices=[1, 5, 13, 15, 47, 49]\n","print(d[indices])\n","#using fancy indexing"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q-xF5aJHFy98","executionInfo":{"status":"ok","timestamp":1733564713626,"user_tz":-330,"elapsed":484,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"b8567041-8af0-4ae2-d2a7-06a133f79c83"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["[65 56 91 57 40 57]\n"]}]},{"cell_type":"code","source":["print(np.mean(b, axis=0))\n","print(np.max(b, axis=0))\n","print(np.sum(b, axis=0))\n","#printing the mean, max and sum of each column of b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4pePIm3jHYjo","executionInfo":{"status":"ok","timestamp":1733564715925,"user_tz":-330,"elapsed":421,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"bdd2b460-8bc9-44ef-d136-3fdd2f0641ac"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["[52.8 45.6 40.6 59.2]\n","[70 89 73 95]\n","[264 228 203 296]\n"]}]},{"cell_type":"code","source":["b[b>np.mean(b, axis=0)]\n","#filtering to get the elements in b which are greater than their respective column sum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R4R_YqntKyH8","executionInfo":{"status":"ok","timestamp":1733564718025,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"733fcf5d-3cd5-4192-846b-ff83f0a9a5aa"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([43, 95, 62, 68, 89, 42, 54, 70, 56, 73, 89])"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["#Part 3"],"metadata":{"id":"-z32P8WsVf3K"}},{"cell_type":"code","source":["i=1\n","ans=1\n","while i<=100:\n","  ans=ans*i\n","  print(ans, \"\\n\")\n","  i=i+1\n","\n","#using a while loop to print fibonacci numbers from 1 to 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"07ia-vNrWLXy","executionInfo":{"status":"ok","timestamp":1733478212223,"user_tz":-330,"elapsed":433,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"2d050407-fe6d-4792-8770-1badc5fd0af6"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["1 \n","\n","2 \n","\n","6 \n","\n","24 \n","\n","120 \n","\n","720 \n","\n","5040 \n","\n","40320 \n","\n","362880 \n","\n","3628800 \n","\n","39916800 \n","\n","479001600 \n","\n","6227020800 \n","\n","87178291200 \n","\n","1307674368000 \n","\n","20922789888000 \n","\n","355687428096000 \n","\n","6402373705728000 \n","\n","121645100408832000 \n","\n","2432902008176640000 \n","\n","51090942171709440000 \n","\n","1124000727777607680000 \n","\n","25852016738884976640000 \n","\n","620448401733239439360000 \n","\n","15511210043330985984000000 \n","\n","403291461126605635584000000 \n","\n","10888869450418352160768000000 \n","\n","304888344611713860501504000000 \n","\n","8841761993739701954543616000000 \n","\n","265252859812191058636308480000000 \n","\n","8222838654177922817725562880000000 \n","\n","263130836933693530167218012160000000 \n","\n","8683317618811886495518194401280000000 \n","\n","295232799039604140847618609643520000000 \n","\n","10333147966386144929666651337523200000000 \n","\n","371993326789901217467999448150835200000000 \n","\n","13763753091226345046315979581580902400000000 \n","\n","523022617466601111760007224100074291200000000 \n","\n","20397882081197443358640281739902897356800000000 \n","\n","815915283247897734345611269596115894272000000000 \n","\n","33452526613163807108170062053440751665152000000000 \n","\n","1405006117752879898543142606244511569936384000000000 \n","\n","60415263063373835637355132068513997507264512000000000 \n","\n","2658271574788448768043625811014615890319638528000000000 \n","\n","119622220865480194561963161495657715064383733760000000000 \n","\n","5502622159812088949850305428800254892961651752960000000000 \n","\n","258623241511168180642964355153611979969197632389120000000000 \n","\n","12413915592536072670862289047373375038521486354677760000000000 \n","\n","608281864034267560872252163321295376887552831379210240000000000 \n","\n","30414093201713378043612608166064768844377641568960512000000000000 \n","\n","1551118753287382280224243016469303211063259720016986112000000000000 \n","\n","80658175170943878571660636856403766975289505440883277824000000000000 \n","\n","4274883284060025564298013753389399649690343788366813724672000000000000 \n","\n","230843697339241380472092742683027581083278564571807941132288000000000000 \n","\n","12696403353658275925965100847566516959580321051449436762275840000000000000 \n","\n","710998587804863451854045647463724949736497978881168458687447040000000000000 \n","\n","40526919504877216755680601905432322134980384796226602145184481280000000000000 \n","\n","2350561331282878571829474910515074683828862318181142924420699914240000000000000 \n","\n","138683118545689835737939019720389406345902876772687432540821294940160000000000000 \n","\n","8320987112741390144276341183223364380754172606361245952449277696409600000000000000 \n","\n","507580213877224798800856812176625227226004528988036003099405939480985600000000000000 \n","\n","31469973260387937525653122354950764088012280797258232192163168247821107200000000000000 \n","\n","1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000 \n","\n","126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000 \n","\n","8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000 \n","\n","544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000 \n","\n","36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000 \n","\n","2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000 \n","\n","171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000 \n","\n","11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000 \n","\n","850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000 \n","\n","61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000 \n","\n","4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000 \n","\n","330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000 \n","\n","24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000 \n","\n","1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000 \n","\n","145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000 \n","\n","11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000 \n","\n","894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000 \n","\n","71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000 \n","\n","5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000 \n","\n","475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000 \n","\n","39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000 \n","\n","3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000 \n","\n","281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000 \n","\n","24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000 \n","\n","2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000 \n","\n","185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000 \n","\n","16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000 \n","\n","1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000 \n","\n","135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000 \n","\n","12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000 \n","\n","1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000 \n","\n","108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000 \n","\n","10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000 \n","\n","991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000 \n","\n","96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000 \n","\n","9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000 \n","\n","933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000 \n","\n","93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000 \n","\n"]}]},{"cell_type":"code","source":["i=1\n","while i<=50:\n","  if i%3==0 and i%5!=0:\n","    print(\"Fizz\")\n","  elif i%5==0 and i%3!=0:\n","    print(\"Buzz\")\n","  elif i%3==0 and i%5==0:\n","    print(\"FizzBuzz\")\n","  else:\n","    print(i)\n","  i=i+1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W6P-67xGWteS","executionInfo":{"status":"ok","timestamp":1733478402796,"user_tz":-330,"elapsed":404,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"894e1dfb-114c-4cb6-f3a4-4190ae7d1e19"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","Fizz\n","4\n","Buzz\n","Fizz\n","7\n","8\n","Fizz\n","Buzz\n","11\n","Fizz\n","13\n","14\n","FizzBuzz\n","16\n","17\n","Fizz\n","19\n","Buzz\n","Fizz\n","22\n","23\n","Fizz\n","Buzz\n","26\n","Fizz\n","28\n","29\n","FizzBuzz\n","31\n","32\n","Fizz\n","34\n","Buzz\n","Fizz\n","37\n","38\n","Fizz\n","Buzz\n","41\n","Fizz\n","43\n","44\n","FizzBuzz\n","46\n","47\n","Fizz\n","49\n","Buzz\n"]}]},{"cell_type":"code","source":["a=list(map(int,input().split()))\n","a.sort()\n","if len(a)%2==0:\n","  print((a[int(len(a)/2)]+a[int(len(a)/2-1)])/2)\n","else:\n","  print(a[int((len(a)-1)/2)])\n","\n","#finding the median of a given list of numbers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wz7g9u7qX-Qy","executionInfo":{"status":"ok","timestamp":1733513446545,"user_tz":-330,"elapsed":6147,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"8fc8e197-57ad-4dc2-8607-bf62723c1adb"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["1 3 2 5\n","2.5\n"]}]},{"cell_type":"code","source":["a=list(map(int,input().split()))\n","sum=0\n","n=0\n","for x in a:\n","  sum+=x\n","  n=n+1\n","print(sum/n)\n","\n","#finding the mean of a given list of numbers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ih2M6w09pJck","executionInfo":{"status":"ok","timestamp":1733499999829,"user_tz":-330,"elapsed":6071,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"ff8a6a32-d4c5-4e3d-f0b2-1675e7039502"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 4 5\n","3.0\n"]}]},{"cell_type":"code","source":["a, b=map(int,input().split())\n","if b==0:\n","  print(\"Cannot divide by 0\")\n","else:\n","  print(a/b)\n","\n","#handling the case of division by 0 separately"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhWzdVsHp1uH","executionInfo":{"status":"ok","timestamp":1733500102092,"user_tz":-330,"elapsed":4486,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"5120ec3f-8e6b-4c2c-db1e-9c9d955e7e04"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["2 0\n","Cannot divide by 0\n"]}]},{"cell_type":"markdown","source":["#Part 4"],"metadata":{"id":"E7in-AzHdqDq"}},{"cell_type":"code","source":["import numpy as np\n","bonus=np.random.randint(0, 100, size=(3, 6, 7))\n","print(bonus)\n","#creating 3D array"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vX8JMno0dvOB","executionInfo":{"status":"ok","timestamp":1733563829681,"user_tz":-330,"elapsed":519,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"e9d9635e-7dd2-42bb-9608-edd83218f9d8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[82  7 92 48 79 60 22]\n","  [46 51 42 13 96 22 34]\n","  [ 4 92  9 39 32 34 53]\n","  [75  4  2 92 24 99 40]\n","  [21  2 35 11 56 84 74]\n","  [68 34 27 27  2 57 84]]\n","\n"," [[30 99 47 82 44 15 94]\n","  [83 87  6 78 65 62 24]\n","  [53 97 40 53 11 49 29]\n","  [ 6 49  4 20 19 56 76]\n","  [80 21 12 19 35  5 38]\n","  [37 97 71 80  6 68 92]]\n","\n"," [[ 0 39 83 34 51 16 13]\n","  [37 33 29 31  1 23 47]\n","  [42 26 77 41 21 49 93]\n","  [20 40 51 55 92 24 45]\n","  [50 54 66 39  5 36 32]\n","  [95 65  5 46 96  0 55]]]\n"]}]},{"cell_type":"code","source":["bonus.transpose(1, 0, 2)\n","#swaping 2 of its axis"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NB1O3BEBY3Zh","executionInfo":{"status":"ok","timestamp":1733545933474,"user_tz":-330,"elapsed":492,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"077d7808-7f12-40ac-85e7-e20d8c2364c5"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[52, 27, 31, 20, 43, 95, 34],\n","        [35, 40, 25, 20, 38, 18, 56],\n","        [99,  2, 67, 28, 57, 59, 96]],\n","\n","       [[79, 93, 55, 82, 29,  2, 92],\n","        [81, 45, 90, 17, 66,  8, 18],\n","        [51, 75, 81, 48, 60, 36, 27]],\n","\n","       [[31, 12, 44, 30, 49,  0, 36],\n","        [71,  5,  0, 29, 84, 28, 11],\n","        [75, 92, 99, 59, 25, 49, 17]],\n","\n","       [[45, 78, 63, 43, 78, 51, 39],\n","        [94, 39, 49, 43, 10, 63, 90],\n","        [30, 90, 22, 67, 25, 58, 26]],\n","\n","       [[73, 51, 82, 43, 16, 71, 15],\n","        [68, 28,  4, 68,  0, 71, 33],\n","        [ 8, 66, 23, 37, 63, 42, 17]],\n","\n","       [[56, 37, 44,  4,  7, 53, 70],\n","        [19, 33, 69, 70, 61, 16, 62],\n","        [53, 61, 38,  4, 84,  4, 36]]])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["print(np.sum(bonus, axis=0), \"\\n\")\n","print(np.sum(bonus, axis=1), \"\\n\")\n","print(np.sum(bonus, axis=2), \"\\n\")\n","#printing sum of each axis"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fCJqBwhvZ4gr","executionInfo":{"status":"ok","timestamp":1733563845246,"user_tz":-330,"elapsed":410,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"65a13670-5c9e-4925-a007-bd4dfa6bc225"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[[112 145 222 164 174  91 129]\n"," [166 171  77 122 162 107 105]\n"," [ 99 215 126 133  64 132 175]\n"," [101  93  57 167 135 179 161]\n"," [151  77 113  69  96 125 144]\n"," [200 196 103 153 104 125 231]] \n","\n","[[296 190 207 230 289 356 307]\n"," [289 450 180 332 180 255 353]\n"," [244 257 311 246 266 148 285]] \n","\n","[[390 304 263 336 283 299]\n"," [411 405 332 230 210 451]\n"," [236 201 349 327 282 362]] \n","\n"]}]},{"cell_type":"code","source":["bonus2=np.random.randint(0, 100, size=(3,5))\n","a1=np.random.randint(0, 100, size=5)\n","print(bonus2, \"\\n\")\n","print(a1, \"\\n\")\n","h=bonus2+a1\n","print(h)\n","#adding a vector to each row of a 2D array"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uGe9ANbgbGO0","executionInfo":{"status":"ok","timestamp":1733563849442,"user_tz":-330,"elapsed":509,"user":{"displayName":"Sreeja Srinivasan","userId":"11661603119850693459"}},"outputId":"04872789-0520-47ae-cd54-3389870d9014"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 4 17 44 77 49]\n"," [88 71 21 15 77]\n"," [ 1 61 60 38 93]] \n","\n","[50 12 78 49 83] \n","\n","[[ 54  29 122 126 132]\n"," [138  83  99  64 160]\n"," [ 51  73 138  87 176]]\n"]}]}]}